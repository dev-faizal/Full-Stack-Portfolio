---
// Hero section with unified rich dark theme and enhanced anime.js animations
---

<section id="hero" class="relative min-h-screen flex items-center justify-center overflow-hidden">
  <!-- Background gradient overlay -->
  <div class="absolute inset-0 bg-gradient-to-br from-[#0f0f0f] via-[#1a1a1a] to-[#0f0f0f]"></div>
  
  <!-- Animated background elements -->
  <div class="absolute inset-0">
    <div class="absolute top-20 left-20 w-32 h-32 bg-[#a9927d]/15 rounded-full"></div>
    <div class="absolute bottom-20 right-20 w-40 h-40 bg-[#7d674c]/15 rounded-full"></div>
    <div class="absolute top-1/2 left-1/4 w-24 h-24 bg-[#a9927d]/10 rounded-full"></div>
    <div class="absolute top-1/3 right-1/4 w-20 h-20 bg-[#7d674c]/12 rounded-full"></div>
    <div class="absolute bottom-1/3 left-1/3 w-16 h-16 bg-[#a9927d]/10 rounded-full"></div>
  </div>
  
  <!-- Floating particles -->
  <div class="absolute inset-0 pointer-events-none">
    <div class="particle absolute w-2 h-2 bg-[#a9927d]/30 rounded-full" style="top: 20%; left: 10%;"></div>
    <div class="particle absolute w-1 h-1 bg-[#7d674c]/40 rounded-full" style="top: 60%; left: 80%;"></div>
    <div class="particle absolute w-1.5 h-1.5 bg-[#a9927d]/25 rounded-full" style="top: 80%; left: 20%;"></div>
    <div class="particle absolute w-1 h-1 bg-[#7d674c]/35 rounded-full" style="top: 30%; left: 70%;"></div>
    <div class="particle absolute w-2 h-2 bg-[#a9927d]/20 rounded-full" style="top: 70%; left: 60%;"></div>
  </div>
  
  <div class="container-custom relative z-10">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <!-- Left Content -->
      <div class="text-left max-w-2xl">
        <!-- Greeting -->
        <div class="mb-4">
          <p class="text-lg text-[#a9927d] font-medium">
            ðŸ‘‹ Hello, I'm
          </p>
        </div>
        
        <!-- Main heading with typing animation -->
        <h1 class="text-6xl font-bold mb-6">
          <span class="gradient-text">Mohammad Faizal</span>
        </h1>
        
        <!-- Subtitle with fade-in animation -->
        <p class="text-xl sm:text-2xl lg:text-3xl text-[#cccccc] mb-6">
          Full Stack Developer & AI Enthusiast
        </p>
        
        <!-- Description with slide-up animation -->
        <p class="text-lg sm:text-xl text-[#e5e5e5] mb-8 leading-relaxed">
          Crafting innovative digital experiences with modern technologies. 
          Experienced in development, deployment, and AI-related projects.
        </p>
        
        <!-- Tech badges with staggered animation -->
        <div class="flex flex-wrap gap-3 mb-8">
          <span class="tech-badge">Javascript</span>
          <span class="tech-badge">Python</span>
          <span class="tech-badge">TypeScript</span>
          <span class="tech-badge">C++</span>
          <span class="tech-badge">AI/ML</span>
          <span class="tech-badge">DevOps</span>
        </div>
        
        <!-- Call to action buttons -->
        <div class="flex flex-col sm:flex-row gap-4">
          <a href="/projects" class="btn-primary group">
            <svg class="w-5 h-5 mr-2 group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
            </svg>
            View My Work
          </a>
          <a href="#contact" class="btn-secondary group">
            <svg class="w-5 h-5 mr-2 group-hover:scale-110 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
            </svg>
            Get In Touch
          </a>
        </div>
        
      
      </div>
      
      <!-- Right Content - Profile Image -->
      <div class="relative flex justify-center lg:justify-end">
        <div class="relative">
          <!-- Main profile image -->
          <div class="relative w-80 h-80 lg:w-96 lg:h-96">
            <div class="absolute inset-0 bg-gradient-to-br from-[#a9927d] to-[#7d674c] rounded-full opacity-25 animate-pulse"></div>
            <div class="relative w-full h-full rounded-full overflow-hidden border-4 border-[#a9927d]/20 shadow-2xl">
              <img 
                src="/profile.jpeg" 
                alt="Mohammad Faizal" 
                class="w-full h-full object-cover"
              />
            </div>
            
            <!-- Floating elements around profile -->
            <div class="absolute -top-4 -right-4 w-8 h-8 bg-[#a9927d] rounded-full flex items-center justify-center shadow-lg">
              <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
              </svg>
            </div>
            
            <div class="absolute -bottom-4 -left-4 w-8 h-8 bg-[#7d674c] rounded-full flex items-center justify-center shadow-lg">
              <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
            </div>
            
            <div class="absolute top-1/2 -right-8 w-6 h-6 bg-[#a9927d]/80 rounded-full flex items-center justify-center shadow-lg">
              <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
            </div>
          </div>
          
          <!-- Background decorative elements -->
           <div class="absolute -top-8 -left-8 w-16 h-16 bg-[#a9927d]/15 rounded-full"></div>
           <div class="absolute -bottom-8 -right-8 w-20 h-20 bg-[#7d674c]/15 rounded-full"></div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Scroll indicator -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2">
    <div class="flex flex-col items-center text-[#a9927d] animate-bounce">
      <span class="text-sm mb-2">Scroll Down</span>
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
      </svg>
    </div>
  </div>
</section>

<style>
  .tech-badge {
    @apply px-4 py-2 bg-[#2a2a2a] border border-[#3a3a3a] rounded-full text-sm text-[#e5e5e5] hover:bg-[#a9927d] hover:text-white transition-all duration-300 hover:scale-105;
  }
  
  /* Custom animations */
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }
  
  @keyframes pulse-glow {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 0.5; transform: scale(1.05); }
  }
  
  @keyframes rotate-slow {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
</style>

<script>
  // Enhanced Hero animations with anime.js
  document.addEventListener('DOMContentLoaded', function() {
    // Check if anime.js is loaded
    if (typeof anime === 'undefined') {
      console.log('Anime.js not loaded, skipping animations');
      return;
    }
    
    // Staggered entrance animations
    const timeline = anime.timeline({
      easing: 'easeOutCubic'
    });
    
    // Greeting animation
    timeline.add({
      targets: '#hero p:first-of-type',
      opacity: [0, 1],
      translateY: [30, 0],
      duration: 800
    });
    
    // Hero title animation
    timeline.add({
      targets: '#hero h1',
      opacity: [0, 1],
      translateY: [30, 0],
      duration: 1000
    }, '-=400');
    
    // Subtitle animation
    timeline.add({
      targets: '#hero p:nth-of-type(2)',
      opacity: [0, 1],
      translateY: [30, 0],
      duration: 800
    }, '-=600');
    
    // Description animation
    timeline.add({
      targets: '#hero p:nth-of-type(3)',
      opacity: [0, 1],
      translateY: [30, 0],
      duration: 800
    }, '-=600');
    
    // Tech badges animation
    timeline.add({
      targets: '#hero .tech-badge',
      opacity: [0, 1],
      translateY: [30, 0],
      scale: [0.8, 1],
      duration: 600,
      delay: anime.stagger(100)
    }, '-=400');
    
    // Buttons animation
    timeline.add({
      targets: '#hero .btn-primary, #hero .btn-secondary',
      opacity: [0, 1],
      translateY: [30, 0],
      scale: [0.9, 1],
      duration: 800,
      delay: anime.stagger(200)
    }, '-=400');
    
    // Stats animation
    timeline.add({
      targets: '#hero .counter',
      opacity: [0, 1],
      translateY: [30, 0],
      duration: 800
    }, '-=400');
    
    // Profile image animation
    timeline.add({
      targets: '#hero .relative.w-80',
      opacity: [0, 1],
      scale: [0.8, 1],
      translateY: [30, 0],
      duration: 1000,
      easing: 'easeOutBack'
    }, '-=600');
    
    // Floating elements animation
    timeline.add({
      targets: '#hero .absolute.-top-4, #hero .absolute.-bottom-4, #hero .absolute.top-1/2',
      opacity: [0, 1],
      scale: [0.5, 1],
      duration: 600,
      delay: anime.stagger(200)
    }, '-=400');
    
    // Counter animation
    const counters = document.querySelectorAll('.counter');
    counters.forEach(counter => {
      const target = parseInt(counter.getAttribute('data-target'));
      
      anime({
        targets: counter,
        innerHTML: [0, target],
        duration: 2000,
        easing: 'easeOutCubic',
        round: 1,
        delay: 2000
      });
    });
    
    // Floating animation for background elements
    anime({
      targets: '#hero .absolute.top-20.left-20',
      translateY: [-15, 15],
      translateX: [-5, 5],
      duration: 4000,
      direction: 'alternate',
      loop: true,
      easing: 'easeInOutSine'
    });
    
    anime({
      targets: '#hero .absolute.bottom-20.right-20',
      translateY: [15, -15],
      translateX: [5, -5],
      duration: 5000,
      direction: 'alternate',
      loop: true,
      easing: 'easeInOutSine'
    });
    
    anime({
      targets: '#hero .absolute.top-1/2.left-1/4',
      translateX: [-8, 8],
      translateY: [-3, 3],
      duration: 3500,
      direction: 'alternate',
      loop: true,
      easing: 'easeInOutSine'
    });
    
    // Particle animations
    anime({
      targets: '.particle',
      translateY: [-20, 20],
      translateX: [-10, 10],
      opacity: [0.2, 0.8, 0.2],
      scale: [0.8, 1.2, 0.8],
      duration: anime.random(3000, 6000),
      direction: 'alternate',
      loop: true,
      easing: 'easeInOutSine',
      delay: anime.stagger(500)
    });
    
    // Floating elements continuous animation
    anime({
      targets: '#hero .absolute.-top-4, #hero .absolute.-bottom-4, #hero .absolute.top-1/2',
      translateY: [-5, 5],
      rotate: [-5, 5],
      duration: 3000,
      direction: 'alternate',
      loop: true,
      easing: 'easeInOutSine',
      delay: anime.stagger(1000)
    });
    
    // Profile image hover effect
    const profileContainer = document.querySelector('#hero .relative.w-80');
    if (profileContainer) {
      profileContainer.addEventListener('mouseenter', () => {
        anime({
          targets: '#hero .absolute.-top-4, #hero .absolute.-bottom-4, #hero .absolute.top-1/2',
          scale: [1, 1.1],
          duration: 300,
          easing: 'easeOutCubic'
        });
      });
      
      profileContainer.addEventListener('mouseleave', () => {
        anime({
          targets: '#hero .absolute.-top-4, #hero .absolute.-bottom-4, #hero .absolute.top-1/2',
          scale: [1.1, 1],
          duration: 300,
          easing: 'easeOutCubic'
        });
      });
    }
  });
</script> 